import os
from dotenv import load_dotenv
import requests

load_dotenv()

HF_API_KEY = os.getenv("HF_API_KEY")
HF_API_URL = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2"

def generate_daily_quest(user_data: dict) -> dict:
    print(os.getenv("HUGGINGFACE_API_KEY"))

    if not HF_API_KEY:
        return {"error": "HF_API_KEY not found in environment variables"}

    headers = {"Authorization": f"Bearer {HF_API_KEY}"}

    prompt = f"""
–¢—ã ‚Äî –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –≤ RPG-–∏–≥—Ä–µ –æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏.
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

üéØ –ó–∞–¥–∞–Ω–∏–µ: ...
üìú –û–ø–∏—Å–∞–Ω–∏–µ: ...
üèÜ –ù–∞–≥—Ä–∞–¥–∞: ...
‚è∞ –°—Ä–æ–∫: ...

–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
–ò–º—è: {user_data['username']}
–£—Ä–æ–≤–µ–Ω—å: {user_data['level']}
–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {user_data['mood']}
–ü—Ä–∏–≤—ã—á–∫–∏: {user_data['habits']}
–¶–µ–ª–∏: {user_data['goals']}
"""

    payload = {"inputs": prompt}

    try:
        resp = requests.post(HF_API_URL, headers=headers, json=payload, timeout=60)
        resp.raise_for_status()
        data = resp.json()

        # –û—Ç–≤–µ—Ç –æ—Ç HF –∏–Ω–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤, –∏–Ω–æ–≥–¥–∞ —Å—Ç—Ä–æ–∫–∞
        if isinstance(data, list) and "generated_text" in data[0]:
            content = data[0]["generated_text"]
        elif isinstance(data, dict) and "error" in data:
            return {"error": data["error"]}
        else:
            return {"raw": data}

        quest = {}
        for line in content.splitlines():
            if "üéØ" in line:
                quest['title'] = line.split(":", 1)[-1].strip()
            elif "üìú" in line:
                quest['description'] = line.split(":", 1)[-1].strip()
            elif "üèÜ" in line:
                quest['reward'] = line.split(":", 1)[-1].strip()
            elif "‚è∞" in line:
                quest['deadline'] = line.split(":", 1)[-1].strip()

        return quest if quest else {"raw": content}
    except Exception as e:
        return {"error": str(e)}
